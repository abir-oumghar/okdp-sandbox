components:
  - name: coredns-patch
    version: 1.0.0
    config:
      install:
        createNamespace: false
    source:
      defaultVersion: 1.0.0
      gitRepository:
        name: flux-system
        path: ./charts/wrapper/{version}/
        unmanaged: true
        namespace: flux-system
    values: |
      body: |
        ---
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: coredns-config-sa
          namespace: kube-system
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          name: coredns-config-role
          namespace: kube-system
        rules:
          - apiGroups: [""]
            resources: ["configmaps"]
            verbs: ["get", "list", "update", "patch"]
            resourceNames: ["coredns"]
          - apiGroups: [""]
            resources: ["configmaps"]
            verbs: ["create"]
          - apiGroups: ["apps"]
            resources: ["deployments"]
            verbs: ["get", "patch"]
            resourceNames: ["coredns"]
          - apiGroups: ["apps"]
            resources: ["deployments/rollout"]
            verbs: ["restart"]
            resourceNames: ["coredns"]
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          name: coredns-config-rolebinding
          namespace: kube-system
        subjects:
          - kind: ServiceAccount
            name: coredns-config-sa
            namespace: kube-system
        roleRef:
          kind: Role
          name: coredns-config-role
          apiGroup: rbac.authorization.k8s.io
        ---
        apiVersion: batch/v1
        kind: Job
        metadata:
          name: coredns-config-job
          namespace: kube-system
        spec:
          ttlSecondsAfterFinished: 10
          template:
            spec:
              serviceAccountName: coredns-config-sa
              containers:
                - name: kubectl
                  image: bitnami/kubectl:latest
                  command:
                    - /bin/bash
                    - -c
                    - |
                      # Vérifier et configurer CoreDNS
                      (
                        kubectl get configmap coredns -n kube-system -o json \
                        | jq -r '.data.Corefile' \
                        | grep -q 'template IN A {{ .Context.ingress.suffix }}'
                      ) || (
                        kubectl get configmap coredns -n kube-system -o yaml \
                        | sed -E '/^[[:space:]]*kubernetes/ i\
                              template IN A {{ .Context.ingress.suffix }} {\
                                  match .*\.{{ .Context.ingress.suffix | replace "." "\\." }}\
                                  answer "{{ "{{ .Name }}" }} 60 IN CNAME ingress-nginx-controller.ingress-nginx.svc.cluster.local."\
                                  fallthrough\
                              }\
                      ' \
                        | kubectl apply -f -
                      )
                      
                      # Redémarrer CoreDNS
                      kubectl rollout restart deployment coredns -n kube-system
              restartPolicy: OnFailure
              # Installer jq
              initContainers:
                - name: install-tools
                  image: alpine:latest
                  command:
                    - /bin/sh
                    - -c
                    - |
                      apk add --no-cache jq
              nodeSelector:
                kubernetes.io/os: linux